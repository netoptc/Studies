{"ast":null,"code":"import { call, put, all, takeLatest } from 'redux-saga/effects';\nimport api from \"../../../services/api\";\nimport { addReserveSuccess } from './actions';\n/**\n * O Reduxe Saga é um middleware \n */\n//function* é a memas coisa que async function\n\nfunction* addToRerve(id) {\n  console.log('entou'); //yield é a mesma coisa que wait\n\n  const response = yield call(api.get, `trips/${id}`); //put funciona igual o dispatch dispara actions para os reducers\n\n  yield put(addReserveSuccess(response.data));\n}\n\nexport default all([takeLatest('ADD_RESERVE_REQUEST', addToRerve)]);","map":{"version":3,"names":["call","put","all","takeLatest","api","addReserveSuccess","addToRerve","id","console","log","response","get","data"],"sources":["/home/neto/Desktop/Studies/REACT/projects/reduxe/src/store/modules/reserve/sagas.js"],"sourcesContent":["import { call, put, all, takeLatest } from 'redux-saga/effects'\nimport api from \"../../../services/api\";\nimport { addReserveSuccess } from './actions';\n\n/**\n * O Reduxe Saga é um middleware \n */\n\n//function* é a memas coisa que async function\nfunction* addToRerve(id){\n    console.log('entou')\n    //yield é a mesma coisa que wait\n    const response = yield call(api.get, `trips/${id}`);\n    //put funciona igual o dispatch dispara actions para os reducers\n    yield put(addReserveSuccess(response.data ))\n}\n\nexport default all([\n    takeLatest('ADD_RESERVE_REQUEST', addToRerve)\n])"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,iBAAT,QAAkC,WAAlC;AAEA;AACA;AACA;AAEA;;AACA,UAAUC,UAAV,CAAqBC,EAArB,EAAwB;EACpBC,OAAO,CAACC,GAAR,CAAY,OAAZ,EADoB,CAEpB;;EACA,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACI,GAAG,CAACO,GAAL,EAAW,SAAQJ,EAAG,EAAtB,CAA3B,CAHoB,CAIpB;;EACA,MAAMN,GAAG,CAACI,iBAAiB,CAACK,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACH;;AAED,eAAeV,GAAG,CAAC,CACfC,UAAU,CAAC,qBAAD,EAAwBG,UAAxB,CADK,CAAD,CAAlB"},"metadata":{},"sourceType":"module"}