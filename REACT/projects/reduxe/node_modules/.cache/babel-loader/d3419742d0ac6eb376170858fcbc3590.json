{"ast":null,"code":"import { call, put, all, takeLatest } from 'redux-saga/effects';\nimport api from \"../../../services/api\";\nimport { addReserveSuccess } from './actions';\n/**\n * O Reduxe Saga é um middleware \n */\n//function* é a memas coisa que async function\n\nfunction* addToReserve(_ref) {\n  let {\n    id\n  } = _ref;\n  console.log(id); //yield é a mesma coisa que wait\n\n  const response = yield call(api.get, `trips/${id}`); //put funciona igual o dispatch dispara actions para os reducers\n\n  yield put(addReserveSuccess(response.data));\n}\n\nexport default all([takeLatest('ADD_RESERVE_REQUEST', addToReserve)]);","map":{"version":3,"names":["call","put","all","takeLatest","api","addReserveSuccess","addToReserve","id","console","log","response","get","data"],"sources":["/home/neto/Desktop/Studies/REACT/projects/reduxe/src/store/modules/reserve/sagas.js"],"sourcesContent":["import { call, put, all, takeLatest } from 'redux-saga/effects'\nimport api from \"../../../services/api\";\nimport { addReserveSuccess } from './actions';\n\n/**\n * O Reduxe Saga é um middleware \n */\n\n//function* é a memas coisa que async function\nfunction* addToReserve({id}){\n    console.log(id)\n    //yield é a mesma coisa que wait\n    const response = yield call(api.get, `trips/${id}`);\n    //put funciona igual o dispatch dispara actions para os reducers\n    yield put(addReserveSuccess(response.data ))\n}\n\nexport default all([\n    takeLatest('ADD_RESERVE_REQUEST', addToReserve)\n])"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,iBAAT,QAAkC,WAAlC;AAEA;AACA;AACA;AAEA;;AACA,UAAUC,YAAV,OAA4B;EAAA,IAAL;IAACC;EAAD,CAAK;EACxBC,OAAO,CAACC,GAAR,CAAYF,EAAZ,EADwB,CAExB;;EACA,MAAMG,QAAQ,GAAG,MAAMV,IAAI,CAACI,GAAG,CAACO,GAAL,EAAW,SAAQJ,EAAG,EAAtB,CAA3B,CAHwB,CAIxB;;EACA,MAAMN,GAAG,CAACI,iBAAiB,CAACK,QAAQ,CAACE,IAAV,CAAlB,CAAT;AACH;;AAED,eAAeV,GAAG,CAAC,CACfC,UAAU,CAAC,qBAAD,EAAwBG,YAAxB,CADK,CAAD,CAAlB"},"metadata":{},"sourceType":"module"}