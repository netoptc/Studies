{"ast":null,"code":"import { select, call, put, all, takeLatest } from 'redux-saga/effects';\nimport api from \"../../../services/api\";\nimport { addReserveSuccess, updateAmountSuccess } from './actions';\n/**\n * O Reduxe Saga é um middleware \n */\n//function* é a memas coisa que async function\n\nfunction* addToReserve(_ref) {\n  let {\n    id\n  } = _ref;\n  const tripExist = yield select(state => state.reserve.find(trip => trip.id === id));\n  const myStock = yield call(api.get, `/stock/${id}`);\n  const stockAmount = myStock.data.amount;\n  const currentStock = tripExist ? tripExist.amount : 0;\n  const amount = currentStock + 1;\n\n  if (amount > stockAmount) {\n    alert('Quantidade maxima atingida.');\n    return;\n  }\n\n  if (tripExist) {\n    //Aumentar o amount\n    yield put(updateAmountSuccess(id, amount));\n  } else {\n    //yield é a mesma coisa que wait\n    const response = yield call(api.get, `trips/${id}`);\n    const data = { ...response.data,\n      amount: 1\n    }; //put funciona igual o dispatch dispara actions para os reducers\n\n    yield put(addReserveSuccess(data));\n  }\n}\n\nfunction* updateAmount(_ref2) {\n  let {\n    id,\n    amount\n  } = _ref2;\n  if (amount <= 0) return;\n  const myStock = yield call(api.get, `/stock/${id}`);\n  const stockAmount = myStock.data.amount;\n\n  if (amount > stockAmount) {\n    alert('Quantidade maxima atingida.');\n    return;\n  }\n\n  yield put(updateAmountSuccess(id, amount));\n}\n\nexport default all([takeLatest('ADD_RESERVE_REQUEST', addToReserve), takeLatest('UPDATE_RESERVE_SUCCESS', updateAmount)]);","map":{"version":3,"names":["select","call","put","all","takeLatest","api","addReserveSuccess","updateAmountSuccess","addToReserve","id","tripExist","state","reserve","find","trip","myStock","get","stockAmount","data","amount","currentStock","alert","response","updateAmount"],"sources":["/home/neto/Desktop/Studies/REACT/projects/reduxe/src/store/modules/reserve/sagas.js"],"sourcesContent":["import { select, call, put, all, takeLatest } from 'redux-saga/effects'\nimport api from \"../../../services/api\";\nimport { addReserveSuccess, updateAmountSuccess } from './actions';\n\n/**\n * O Reduxe Saga é um middleware \n */\n\n//function* é a memas coisa que async function\nfunction* addToReserve({id}){\n    const tripExist = yield select(\n        state=> state.reserve.find(trip => trip.id === id)\n    );\n\n\n    const myStock = yield call(api.get, `/stock/${id}`);\n    const stockAmount = myStock.data.amount;\n    const currentStock = tripExist ? tripExist.amount : 0;\n    const amount = currentStock + 1;\n\n    if(amount > stockAmount){\n        alert('Quantidade maxima atingida.');\n        return;\n    }\n\n    if(tripExist){\n        //Aumentar o amount\n        yield put(updateAmountSuccess(id, amount))\n\n    }else{\n        //yield é a mesma coisa que wait\n        const response = yield call(api.get, `trips/${id}`);\n\n        const data = {\n            ...response.data,\n            amount: 1,\n        }\n\n        //put funciona igual o dispatch dispara actions para os reducers\n        yield put(addReserveSuccess(data))\n    }\n\n    \n}\n\nfunction* updateAmount({id, amount}){\n    if(amount <= 0) return;\n    const myStock = yield call(api.get, `/stock/${id}`);\n    const stockAmount = myStock.data.amount;\n\n    if(amount > stockAmount){\n        alert('Quantidade maxima atingida.');\n        return;\n    }\n\n    yield put(updateAmountSuccess(id,amount));\n\n}   \n\nexport default all([\n    takeLatest('ADD_RESERVE_REQUEST', addToReserve),\n    takeLatest('UPDATE_RESERVE_SUCCESS', updateAmount)\n])"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,oBAAnD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,WAAvD;AAEA;AACA;AACA;AAEA;;AACA,UAAUC,YAAV,OAA4B;EAAA,IAAL;IAACC;EAAD,CAAK;EACxB,MAAMC,SAAS,GAAG,MAAMV,MAAM,CAC1BW,KAAK,IAAGA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAvC,CADkB,CAA9B;EAKA,MAAMM,OAAO,GAAG,MAAMd,IAAI,CAACI,GAAG,CAACW,GAAL,EAAW,UAASP,EAAG,EAAvB,CAA1B;EACA,MAAMQ,WAAW,GAAGF,OAAO,CAACG,IAAR,CAAaC,MAAjC;EACA,MAAMC,YAAY,GAAGV,SAAS,GAAGA,SAAS,CAACS,MAAb,GAAsB,CAApD;EACA,MAAMA,MAAM,GAAGC,YAAY,GAAG,CAA9B;;EAEA,IAAGD,MAAM,GAAGF,WAAZ,EAAwB;IACpBI,KAAK,CAAC,6BAAD,CAAL;IACA;EACH;;EAED,IAAGX,SAAH,EAAa;IACT;IACA,MAAMR,GAAG,CAACK,mBAAmB,CAACE,EAAD,EAAKU,MAAL,CAApB,CAAT;EAEH,CAJD,MAIK;IACD;IACA,MAAMG,QAAQ,GAAG,MAAMrB,IAAI,CAACI,GAAG,CAACW,GAAL,EAAW,SAAQP,EAAG,EAAtB,CAA3B;IAEA,MAAMS,IAAI,GAAG,EACT,GAAGI,QAAQ,CAACJ,IADH;MAETC,MAAM,EAAE;IAFC,CAAb,CAJC,CASD;;IACA,MAAMjB,GAAG,CAACI,iBAAiB,CAACY,IAAD,CAAlB,CAAT;EACH;AAGJ;;AAED,UAAUK,YAAV,QAAoC;EAAA,IAAb;IAACd,EAAD;IAAKU;EAAL,CAAa;EAChC,IAAGA,MAAM,IAAI,CAAb,EAAgB;EAChB,MAAMJ,OAAO,GAAG,MAAMd,IAAI,CAACI,GAAG,CAACW,GAAL,EAAW,UAASP,EAAG,EAAvB,CAA1B;EACA,MAAMQ,WAAW,GAAGF,OAAO,CAACG,IAAR,CAAaC,MAAjC;;EAEA,IAAGA,MAAM,GAAGF,WAAZ,EAAwB;IACpBI,KAAK,CAAC,6BAAD,CAAL;IACA;EACH;;EAED,MAAMnB,GAAG,CAACK,mBAAmB,CAACE,EAAD,EAAIU,MAAJ,CAApB,CAAT;AAEH;;AAED,eAAehB,GAAG,CAAC,CACfC,UAAU,CAAC,qBAAD,EAAwBI,YAAxB,CADK,EAEfJ,UAAU,CAAC,wBAAD,EAA2BmB,YAA3B,CAFK,CAAD,CAAlB"},"metadata":{},"sourceType":"module"}