{"ast":null,"code":"var _jsxFileName = \"/home/neto/Desktop/Studies/REACT/projects/repos/src/pages/Repositorio/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Container } from './styles';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Repositorio(_ref) {\n  let {\n    match\n  } = _ref;\n  // useEffect(()=>{\n  //     async function load(){\n  //         const nomeRepo = decodeURIComponent(match.parms.repositorio)\n  //         //Ira executar 2 requições de uma vez e retornara o resultado das duas em um array\n  //         const [repositorioData, issuesData] = await Promise.all([\n  //             api.get(`/repos/${nomeRepo}`),\n  //             api.get(`/repos/${nomeRepo}/issues `),\n  //         ]);\n  //         console.log(repositorioData);\n  //         console.log(issuesData);\n  //     }\n  //     load();\n  // } , []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: decodeURIComponent(match.parms.repositorio)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = Repositorio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositorio\");","map":{"version":3,"sources":["/home/neto/Desktop/Studies/REACT/projects/repos/src/pages/Repositorio/index.js"],"names":["React","useState","useEffect","Container","api","Repositorio","match","decodeURIComponent","parms","repositorio"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,UAAxB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,eAAe,SAASC,WAAT,OAA6B;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AAExC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA,sBACI,QAAC,SAAD;AAAA,cACKC,kBAAkB,CAACD,KAAK,CAACE,KAAN,CAAYC,WAAb;AADvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAzBuBJ,W","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Container} from './styles'\nimport api from '../../services/api';\n\nexport default function Repositorio({match}){\n    \n    // useEffect(()=>{\n    //     async function load(){\n    //         const nomeRepo = decodeURIComponent(match.parms.repositorio)\n\n    //         //Ira executar 2 requições de uma vez e retornara o resultado das duas em um array\n    //         const [repositorioData, issuesData] = await Promise.all([\n    //             api.get(`/repos/${nomeRepo}`),\n    //             api.get(`/repos/${nomeRepo}/issues `),\n    //         ]);\n\n    //         console.log(repositorioData);\n    //         console.log(issuesData);\n    //     }\n\n    //     load();\n\n    // } , []);\n    \n    return(\n        <Container>\n            {decodeURIComponent(match.parms.repositorio)}\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}